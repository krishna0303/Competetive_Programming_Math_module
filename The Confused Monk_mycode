
#include <bits/stdc++.h> 
#define mod 1000000007

 
using namespace std;
typedef long long ll;

int gcd(ll a, ll b) 
{ 
	if (a == 0) 
		return b; 
	return gcd(b % a, a); 
} 


ll findGCD(ll arr[], ll n) 
{ 
	ll result = arr[0]; 
	for (int i = 1; i < n; i++) 
	{ 
		result = gcd(arr[i], result); 

		if(result == 1) 
		{ 
		return 1; 
		} 
	} 
	return result; 
} 

// Driver code 

ll modularExponentiation(ll x,ll n)
{
    if(n==0)
        return 1;
    else if(n%2 == 0)        //n is even
        return modularExponentiation((x*x)%mod,n/2);
    else                             //n is odd
        return (x*modularExponentiation((x*x)%mod,(n-1)/2))%mod;

}
int main() 
{ 
	ll n;
	cin>>n;
	ll *arr=new ll[n];
	for(int i=0;i<n;i++){
	    cin>>arr[i];
	}
	
	ll fx=findGCD(arr,n);
// 	cout<<fx<<endl;
	ll gx=arr[0];
	for(int i=1;i<n;i++){
	    gx=((gx%mod)*(arr[i]%mod))%mod;
	}
	ll ans=modularExponentiation(gx,fx)%mod;
	cout<<ans<<endl;
	
	return 0; 
} 
